{"version":3,"sources":["../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss","helpers/_grid.scss","../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_outer-container.scss","../../node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_span-columns.scss","../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_private.scss","../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_shift.scss","base/_reset.scss","base/_global.scss","components/_header.scss","helpers/_variables.scss","components/_hero.scss","components/_footer.scss"],"names":[],"mappings":"AAGE;EACE,+BAAuB;EAAvB,uBAAuB,EACxB;;AAED;EAII,4BAAoB;EAApB,oBAAoB,EACrB;;ACTL;EC6BE,kBDhCgB;ECiChB,kBACa;EADb,mBAEc;ED9BZ,mBAAmB;EACnB,oBAAoB,EACvB;EAJD;IEiBI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB;;AFbH;EGyDI,YAAO;EAGL,eAAe;EAef,uBCtEc;EDuEd,YC5Ec,EJEnB;EAFD;IG+EQ,gBAA+B,EAChC;;AH5EP;EGqDI,YAAO;EAGL,eAAe;EAef,uBCtEc;EDuEd,YC5Ec,EJMnB;EAFD;IG2EQ,gBAA+B,EAChC;;AHxEP;EACI;IGgDA,YAAO;IAGL,eAAe;IAef,uBCtEc;IDuEd,iBC5Ec,EJWf;IAFD;MGsEI,gBAA+B,EAChC;EHnEH;IG4CA,YAAO;IAGL,eAAe;IAef,uBCtEc;IDuEd,iBC5Ec;ICmClB,qBAAgD;ILnB1C,kBAAkB,EACrB;IAJD;MGkEI,gBAA+B,EAChC,EAAA;;AG1FP;;;EAGE;AAEF;;;;;EAKE;AAEF;EACI,UAAU;EACV,WAAW;EACX,UAAU;EACV,gBAAgB;EAChB,cAAc;EACd,yBAAyB;EACzB,+BAAuB;EAAvB,2BAAuB;EAAvB,uBAAuB,EAC1B;;AAED;EACI,+BAAuB;EAAvB,uBAAuB,EAC1B;;AAED;EACI,eAAe,EAClB;;AAED;EACI,eAAe;EACf,iBAAiB,EACpB;;AAED;EACI,iBAAiB,EACpB;;AAED;EACI,aAAa,EAChB;;AAED;EAEQ,YAAY;EACZ,cAAc,EACjB;;AAGL;EAEQ,YAAY;EACZ,cAAc,EACjB;;AAGL;EACI,0BAA0B;EAC1B,kBAAkB,EACrB;;AAED;EACI,sBAAsB,EACzB;;AC/DD;EACI,eAAe;EACf,mBAAmB;EACnB,gBAAgB;EAChB,eAAe,EAClB;;ACND;EACI,mBAAmB;EACnB,YAAY,EAsIf;EAxID;IAKQ,8BAA8B;IAC9B,aAAa;IACb,kBAAkB,EAgIrB;IAvIL;MAYoB,YAAY;MACZ,aAAa,EAChB;IAdjB;MAkBgB,sBAAsB;MACtB,mBAAmB;MACnB,aAAa;MAEb,aAAa;MACb,aAAa;MACb,gBAAgB;MAChB,YAAY;MAEZ,gCAAiB;MAAjB,4BAAiB;MAAjB,wBAAiB,EAkDpB;MA7Eb;QA8BoB,eAAe;QACf,mBAAmB;QACnB,QAAQ;QACR,YAAY;QACZ,cAAc;QACd,oBCnBN;QDsBM,gCAAiB;QAAjB,4BAAiB;QAAjB,wBAAiB;QACjB,kIAAmH;QAAnH,0HAAmH;QAAnH,mHAAmH;QAAnH,sJAAmH,EActH;QArDjB;UA0CwB,SAAS,EACZ;QA3CrB;UA8CwB,UAAU;UACV,oBAAoB,EACvB;QAhDrB;UAmDwB,UAAU,EACb;MApDrB;QA2DwB,6GAA6F;QAA7F,qGAA6F;QAA7F,6FAA6F;QAA7F,sIAA6F,EAgBhG;QA3ErB;UA8D4B,UAAU;UACV,iCAAiB;UAAjB,6BAAiB;UAAjB,yBAAiB,EAEpB;QAjEzB;UAoE4B,mBAAmB,EACtB;QArEzB;UAwE4B,UAAU;UACV,kCAAiB;UAAjB,8BAAiB;UAAjB,0BAAiB,EACpB;IA1EzB;MAgFgB,mBAAmB;MACnB,uBCrEJ;MDsEI,OAAO;MACP,WAAW;MACX,SAAS;MACT,cAAc;MACd,iBAAiB;MACjB,WAAW;MACX,mEAA2D;MAA3D,2DAA2D,EA8B9D;MAtHb;QA2FoB,oBAAoB,EAkBvB;QA7GjB;UA8FwB,iBAAiB;UACjB,mBAAmB;UACnB,mBAAmB,EAYtB;UA5GrB;YAoG4B,eAAe;YACf,eAAe;YACf,gBAAgB;YAChB,kBAAkB;YAClB,YC3FhB;YD6FgB,aAAa,EAChB;MA3GzB;QA+GoB,YAAY;QACZ,gBAAgB;QAChB,QAAQ;QACR,WAAW;QAEX,mEAA2D;QAA3D,2DAA2D,EAC9D;IArHjB;MA6HwB,WCjHZ,EDkHS;IA9HrB;MAmIoB,iBCvHR,EDwHK;;AEpIjB;EACI,kDAAiD;EACjD,6BAA6B;EAC7B,uBAAuB;EACvB,4BAA4B;EAC5B,mBAAmB;EACnB,YAAY;EACZ,cAAc;EACd,kBAAkB;EAClB,WAAW,EAyCd;EAlDD;IAaY,mBAAmB;IACnB,iBAAiB;IACjB,iBAAiB;IACjB,eDFK;ICGL,WAAW,EACd;EAlBT;IAsBQ,uBDVI;ICWJ,sDAAqD;IACrD,uCAAuC;IACvC,6BAA6B;IAC7B,2BAA2B;IAE3B,cDlBc,ECuBjB;IAjCL;MA+BY,8BAA8B,EACjC;EAhCT;IAoCQ,uDAAsD;IACtD,gCAAgC;IAChC,2BAA2B,EAC9B;EAvCL;IA0CQ,YAAY;IACZ,mBAAmB;IACnB,0CD7BiB;IC8BjB,aAAa;IACb,YAAY;IACZ,OAAO;IACP,QAAQ,EACX;;ACjDL;EACI,0BFaa;EEZb,eAAe;EACf,mBAAmB,EACtB","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","$max-width: 1080px;\n\n//used mostly on divs to be the outer container of the section\n.container {\n    @include outer-container;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n\n//for individual project pages\n.headings {\n    @include span-columns(12);\n}\n\n.to-the-right {\n    @include span-columns(12);\n}\n\n@media only screen and (min-width: 750px) {\n    .headings {\n        @include span-columns(4);\n    }\n\n    .to-the-right {\n        @include span-columns(7);\n        @include shift(1);\n        padding-top: 35px;\n    }\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n","@charset \"UTF-8\";\n\n/// Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.\n///\n/// @param {Number (unitless)} $n-columns [1]\n///   Number of columns by which the element shifts.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -25.58941%;\n///   }\n\n@mixin shift($n-columns: 1) {\n  @include shift-in-context($n-columns);\n}\n\n/// Translates an element horizontally by a number of columns, in a specific nesting context.\n///\n/// @param {List} $shift\n///   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).\n///\n///   The two values can be separated with any string such as `of`, `/`, etc.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3 of 6);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -52.41458%;\n///   }\n\n@mixin shift-in-context($shift: $columns of $container-columns) {\n  $n-columns: nth($shift, 1);\n  $parent-columns: container-shift($shift) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  margin-#{$opposite-direction}: $n-columns * flex-grid(1, $parent-columns) + $n-columns * flex-gutter($parent-columns);\n\n  // Reset nesting context\n  $parent-columns: $grid-columns !global;\n}\n","/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n/*\nTheme Name: Mixby Wordpress\nAuthor: Heidi Yee\nDescription: Learning Wordpress using Mixby site by customizing new theme based on twentyfifteen theme\nVersion: 1.0.0\n*/\n\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n    text-size-adjust: 100%;\n}\n\nhtml {\n    box-sizing: border-box;\n}\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n}\n\nbody {\n    line-height: 1;\n    font-size: 62.5%;\n}\n\nol, ul {\n    list-style: none;\n}\n\nblockquote, q {\n    quotes: none;\n}\n\nblockquote {\n    &:before, &:after {\n        content: '';\n        content: none;\n    }\n}\n\nq {\n    &:before, &:after {\n        content: '';\n        content: none;\n    }\n}\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\na {\n    text-decoration: none;\n}\n","//--------Classes----------\n.offscreen {\n    display: block;\n    position: absolute;\n    left: -999999px;\n    top: -999999px;\n}\n","header {\n    position: relative;\n    z-index: 10;\n\n    .nav-bar {\n        background-color: transparent;\n        height: 60px;\n        padding-top: 20px;\n\n        .container {\n            a {\n                svg {\n                    width: auto;\n                    height: 30px;\n                }\n            }\n\n            #nav-icon {\n                display: inline-block;\n                position: relative;\n                float: right;\n                // top: 3em;\n                width: 2.5em;\n                height: 30px;\n                cursor: pointer;\n                z-index: 20;\n\n                transform: rotate(0deg);\n\n                .line {\n                    display: block;\n                    position: absolute;\n                    left: 0;\n                    width: 100%;\n                    height: 3.5px;\n                    background: $blue;\n\n                    // border-radius: 1em;\n                    transform: rotate(0deg);\n                    transition: top .2s ease-in-out 0.2s,transform 0.2s ease-in-out, background 0.2s linear, visibility 0.1s ease 0.2s;\n\n                    &:nth-child(1) {\n                        top: 5px;\n                    }\n\n                    &:nth-child(2) {\n                        top: 13px;\n                        visibility: visible;\n                    }\n\n                    &:nth-child(3) {\n                        top: 21px;\n                    }\n                }\n\n                &.open {\n\n                    .line {\n\n                        transition: top 0.2s ease-in-out, transform 0.2s ease-in-out 0.2s, visibility 0.2s ease 0.1s;\n\n                        &:nth-child(1) {\n                            top: 13px;\n                            transform: rotate(45deg);\n\n                        }\n\n                        &:nth-child(2) {\n                            visibility: hidden;\n                        }\n\n                        &:nth-child(3) {\n                            top: 13px;\n                            transform: rotate(-45deg);\n                        }\n                    }\n                }\n            }\n\n            #nav-links {\n                position: absolute;\n                background-color: $white;\n                top: 0;\n                left: 100%;\n                width: 0;\n                height: 100vh;\n                overflow: hidden;\n                z-index: 3;\n                transition: width .25s ease-in-out, left 0.25s ease-in-out;\n\n                ul {\n                    padding: 10em 0 2em;\n\n                    li {\n                        font-size: 1.8em;\n                        text-align: center;\n                        position: relative;\n\n\n                        a {\n                            display: block;\n                            padding: 1em 0;\n                            font-size: 14px;\n                            font-weight: bold;\n                            color: $black;\n\n                            border: none;\n                        }\n                    }\n                }\n                &.popup {\n                    width: 100%;\n                    position: fixed;\n                    left: 0;\n                    z-index: 6;\n\n                    transition: width .25s ease-in-out, left 0.25s ease-in-out;\n                }\n            }\n        }\n\n        &.what-we-do, &.about-us , &.contact, &.blog {\n            .container {\n                svg {\n                    .st0 {\n                        fill: $white;\n                    }\n                }\n            }\n            #nav-icon {\n                .line {\n                    background: $white;\n                }\n            }\n        }\n    }\n}\n","$iphone6-width: 375px;\n$iphone6-height: 667px;\n\n$iphone6plus-width: 414px;\n$iphone6plus-height: 736px;\n\n$iphone5-width: 320px;\n$iphone5-height: 568px;\n\n$iphone4-width: 320px;\n$iphone4-height: 480px;\n\n$white: #fff;\n$black: #000;\n$seafoam: #89EFC6;\n$seafoam-background: rgba(21,173,195,0.7);\n$blue: #15ADC3;\n",".hero {\n    background: url(../assets/concert-background.jpg);\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    position: relative;\n    width: 100%;\n    height: 200px;\n    margin-top: -60px;\n    z-index: 0;\n\n    .container {\n        h2, .headline {\n            position: relative;\n            padding-top: 3em;\n            font-size: 3.6em;\n            color: $seafoam;\n            z-index: 1;\n        }\n    }\n\n    &.index, &.clients {\n        background-color: $white;\n        background-image: url(../assets/index-background.svg);\n        background-position: right -5em bottom;\n        background-repeat: no-repeat;\n        background-size: 200% auto;\n\n        height: $iphone4-height;\n\n        &::after {\n            background-color: transparent;\n        }\n    }\n\n    &.blog, &.about-us {\n        background-image: url(../assets/people-background.jpg);\n        background-position: top center;\n        background-size: auto 200%;\n    }\n\n    &::after {\n        content: \"\";\n        position: absolute;\n        background-color: $seafoam-background;\n        height: 100%;\n        width: 100%;\n        top: 0;\n        left: 0;\n    }\n}\n","footer {\n    background-color: $seafoam;\n    padding: 3em 0;\n    text-align: center;\n}\n"]}